/** ____________________________________________________________________
 *
 *	@file		ControlContainerM.h
 *
 *				BaseCamElectronics Team
 *
 *				Mini-Remote Controller project
 *
 *				https://www.basecamelectronics.com
 *  ____________________________________________________________________
 */

#ifndef		_CONTROL_CONTAINER_M_H_
#define		_CONTROL_CONTAINER_M_H_

/*  = = = = = = = = = = = = = = = = = = = = = = = */

#include	"gfx.h"

/* Control */
#define		CONTROL_AXIS_X_DEADBAND			500
#define		CONTROL_AXIS_Y_DEADBAND			500

#define		CONTROL_POT_DEADBAND			1
#define		CONTROL_POT_AVERAGE_FACTOR		4

/* Common */
#define		CONTROL_LABELS_HEIGHT			16
#define		CONTROL_PROFILE_LABELS_HEIGHT	17
#define		CONTROL_AXIS_LABELS_WIDTH		60
#define		CONTROL_ANGLE_LABELS_WIDTH		60

#define		CONTROL_PROGRESSBAR_THICK		PROGRESSBARS_THICK
#define		CONTROL_PROGRESSBAR_MARGIN		4

/* Progressbars */
#define		CONTROL_PROGRESSBAR_X_COORD_X	((CONTROL_PROGRESSBAR_MARGIN * 2) + CONTROL_PROGRESSBAR_THICK)
#define		CONTROL_PROGRESSBAR_X_COORD_Y	(DISPLAY_HEIGHT - CONTROL_PROGRESSBAR_MARGIN - CONTROL_PROGRESSBAR_THICK)
#define		CONTROL_PROGRESSBAR_X_LENGTH	(DISPLAY_WIDTH - (CONTROL_PROGRESSBAR_MARGIN * 3) - CONTROL_PROGRESSBAR_THICK)

#define		CONTROL_PROGRESSBAR_Y_COORD_X	CONTROL_PROGRESSBAR_MARGIN
#define		CONTROL_PROGRESSBAR_Y_COORD_Y	CONTROL_PROGRESSBAR_MARGIN
#define		CONTROL_PROGRESSBAR_Y_LENGTH	(DISPLAY_HEIGHT - (CONTROL_PROGRESSBAR_MARGIN * 2))

/* Circle */
#define		CONTROL_CIRCLE_RADIUS			26
#define		CONTROL_CIRCLE_THICK			7
#define		CONTROL_CIRCLE_COORD_X			(CONTROL_PROGRESSBAR_THICK + (CONTROL_PROGRESSBAR_MARGIN * 2) + CONTROL_CIRCLE_RADIUS)
#define		CONTROL_CIRCLE_COORD_Y			(DISPLAY_HEIGHT - (CONTROL_PROGRESSBAR_THICK + (CONTROL_PROGRESSBAR_MARGIN * 2)) - CONTROL_CIRCLE_RADIUS)

/* Circle's arrow */
#define		CONTROL_CIRCLE_ARROW_LENGHT		((CONTROL_CIRCLE_RADIUS / 2) - 1)

/* Labels */
#define		CONTROL_LABEL_GMB_PRF_WIDTH		32
#define		CONTROL_LABEL_GMB_PRF_COORD_X	(CONTROL_LABEL_CTRL_PRF_COORD_X - CONTROL_LABEL_CTRL_PRF_WIDTH)
#define		CONTROL_LABEL_GMB_PRF_COORD_Y	CONTROL_PROGRESSBAR_MARGIN

#define		CONTROL_LABEL_CTRL_PRF_WIDTH	32
#define		CONTROL_LABEL_CTRL_PRF_COORD_X	(DISPLAY_WIDTH - CONTROL_LABEL_CTRL_PRF_WIDTH)
#define		CONTROL_LABEL_CTRL_PRF_COORD_Y	CONTROL_PROGRESSBAR_MARGIN

#define		CONTROL_SENS_ADJ_WIDTH			CONTROL_AXIS_LABELS_WIDTH
#define		CONTROL_SENS_ADJ_COORD_X		(DISPLAY_WIDTH - CONTROL_AXIS_LABELS_WIDTH)
#define		CONTROL_SENS_ADJ_COORD_Y		(CONTROL_PROGRESSBAR_MARGIN + CONTROL_PROFILE_LABELS_HEIGHT)

#define		CONTROL_SENS_ADJ_TIMEOUT		2000	// Units: ms

#define		CONTROL_LABEL_AXIS_X_WIDTH		CONTROL_AXIS_LABELS_WIDTH
#define		CONTROL_LABEL_AXIS_X_COORD_X	(DISPLAY_WIDTH - CONTROL_PROGRESSBAR_MARGIN - CONTROL_LABEL_AXIS_X_WIDTH)
#define		CONTROL_LABEL_AXIS_X_COORD_Y	(CONTROL_PROGRESSBAR_X_COORD_Y - (CONTROL_LABELS_HEIGHT * 2) + CONTROL_PROGRESSBAR_MARGIN)

#define		CONTROL_LABEL_ANGLE_X_WIDTH		CONTROL_ANGLE_LABELS_WIDTH
#define		CONTROL_LABEL_ANGLE_X_COORD_X	(DISPLAY_WIDTH - CONTROL_PROGRESSBAR_MARGIN - CONTROL_LABEL_ANGLE_X_WIDTH)
#define		CONTROL_LABEL_ANGLE_X_COORD_Y	(CONTROL_PROGRESSBAR_X_COORD_Y - CONTROL_LABELS_HEIGHT)

#define		CONTROL_LABEL_AXIS_Y_WIDTH		CONTROL_AXIS_LABELS_WIDTH
#define		CONTROL_LABEL_AXIS_Y_COORD_X	((CONTROL_PROGRESSBAR_MARGIN * 2) + CONTROL_PROGRESSBAR_THICK)
#define		CONTROL_LABEL_AXIS_Y_COORD_Y	CONTROL_PROGRESSBAR_MARGIN

#define		CONTROL_LABEL_ANGLE_Y_WIDTH		CONTROL_ANGLE_LABELS_WIDTH
#define		CONTROL_LABEL_ANGLE_Y_COORD_X	((CONTROL_PROGRESSBAR_MARGIN * 2) + CONTROL_PROGRESSBAR_THICK)
#define		CONTROL_LABEL_ANGLE_Y_COORD_Y	CONTROL_LABELS_HEIGHT

#define		CONTROL_LABEL_AXIS_P_WIDTH		CONTROL_AXIS_LABELS_WIDTH
#define		CONTROL_LABEL_AXIS_P_COORD_X	((CONTROL_PROGRESSBAR_MARGIN * 3) + CONTROL_PROGRESSBAR_THICK + (CONTROL_CIRCLE_RADIUS * 2))
#define		CONTROL_LABEL_AXIS_P_COORD_Y	(CONTROL_CIRCLE_COORD_Y - CONTROL_LABELS_HEIGHT + 2)

#define		CONTROL_LABEL_ANGLE_P_WIDTH		CONTROL_ANGLE_LABELS_WIDTH
#define		CONTROL_LABEL_ANGLE_P_COORD_X	((CONTROL_PROGRESSBAR_MARGIN * 3) + CONTROL_PROGRESSBAR_THICK + (CONTROL_CIRCLE_RADIUS * 2))
#define		CONTROL_LABEL_ANGLE_P_COORD_Y	(CONTROL_CIRCLE_COORD_Y - CONTROL_PROGRESSBAR_MARGIN + 2)


typedef enum
{
	CSA_NO							= 0,
	CSA_AXIS_X,
	CSA_AXIS_Y,
	CSA_AXIS_P

}	ControlSensAdj_t;


class CControlContainerM : public CXContainer
{
	private :

		GHandle				ghLabelAxisX,
							ghLabelAxisY,
							ghLabelAxisP,

							ghLabelAngleX,
							ghLabelAngleY,
							ghLabelAngleP,

							ghLabelGimbalProfile,
							ghLabelControlProfile,

							ghProgressbarX,
							ghProgressbarY,

							ghLabelControlSens;


		ui16				xRes,
							yRes,
							pRes,
							pResOld;

		ControlSensAdj_t	currentSensAdjState;


	public :

		void				RewriteControlValues (void);
		void				Init (void);
		void				vTask (void *pvParameters);
		void				OnHide (void);

};


/*  = = = = = = = = = = = = = = = = = = = = = = = */

#endif		/* _CONTROL_CONTAINER_M_H_ */
